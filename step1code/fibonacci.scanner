Value: PROGRAM
Value: fibonacci
Value: BEGIN
Value: STRING
Value: input
Value: :=
Value: "Please input an integer number: "
Value: ;
Value: STRING
Value: space
Value: :=
Value: " "
Value: ;
Value: STRING
Value: eol
Value: :=
Value: "\n"
Value: ;
Value: FUNCTION
Value: F
Value: n
Value: )
Value: BEGIN
Value: IF
Value: (
Value: n
Value: >
Value: 2
Value: )
Value: RETURN
Value: F
Value: (
Value: n
Value: -1
Value: )
Value: +
Value: F
Value: (
Value: n
Value: -2
Value: )
Value: ;
Value: ELSIF
Value: (
Value: n
Value: =
Value: 0
Value: )
Value: -
Value: -
Value: This
Value: is
Value: a
Value: comment
Value: RETURN
Value: 0
Value: ;
Value: ELSIF
Value: (
Value: n
Value: =
Value: 1
Value: )
Value: RETURN
Value: 1
Value: ;
Value: ELSIF
Value: (
Value: n
Value: =
Value: 2
Value: )
Value: RETURN
Value: 1
Value: ;
Value: ENDIF
token type: IDEntifier
Value: END
Value: FUNCTION
Value: VOID
Value: main
Value: BEGIN
Value: i
Value: end
Value: result
Value: ;
Value: input
Value: )
Value: ;
Value: READ
Value: (
Value: end
Value: )
Value: ;
Value: i
Value: :=
Value: 0
Value: ;
Value: DO
Value: result
Value: :=
Value: F
Value: (
Value: i
Value: )
Value: ;
Value: WRITE
Value: (
Value: i
Value: space
Value: )
Value: ;
Value: WRITE
Value: (
Value: result
Value: eol
Value: )
Value: ;
Value: i
Value: :=
Value: i
Value: +
Value: 1
Value: ;
Value: WHILE
Value: (
Value: i
Value: !=
Value: end
Value: )
Value: ;
token type: IDEntifier
Value: END
token type: IDEntifier
Value: END
