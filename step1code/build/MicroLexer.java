// Generated from Micro.g4 by ANTLR 4.5.3
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MicroLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, IDENTIFIER=33, INTLITERAL=34, FLOATLITERAL=35, STRINGLITERAL=36, 
		COMMENT=37, WHITESPACE=38, KEYWORD=39, OPERATOR=40;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "ANY_LETTER", 
		"ANY_DIGIT", "NEW_LINE", "CARRIAGE_RETURN", "TAB", "SPACE", "COMMENT_BEGIN", 
		"IDENTIFIER", "INTLITERAL", "FLOATLITERAL", "STRINGLITERAL", "COMMENT", 
		"WHITESPACE", "KEYWORD", "OPERATOR"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'PROGRAM'", "'BEGIN'", "'END'", "'STRING'", "':='", "'FLOAT'", 
		"'INT'", "'VOID'", "','", "'FUNCTION'", "'('", "')'", "'READ'", "'WRITE'", 
		"'RETURN'", "'+'", "'-'", "'*'", "'/'", "'IF'", "'ENDIF'", "'ELSIF'", 
		"'TRUE'", "'FALSE'", "'<'", "'>'", "'='", "'!='", "'<='", "'>='", "'DO'", 
		"'WHILE'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, "IDENTIFIER", "INTLITERAL", 
		"FLOATLITERAL", "STRINGLITERAL", "COMMENT", "WHITESPACE", "KEYWORD", "OPERATOR"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MicroLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Micro.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2*\u01a2\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6"+
		"\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3"+
		"\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3"+
		"\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3"+
		"\20\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\25\3"+
		"\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3"+
		"\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3"+
		"\34\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3!"+
		"\3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3(\3)\3)\3)\6)\u00fa"+
		"\n)\r)\16)\u00fb\5)\u00fe\n)\3*\5*\u0101\n*\3*\6*\u0104\n*\r*\16*\u0105"+
		"\3+\5+\u0109\n+\3+\6+\u010c\n+\r+\16+\u010d\3+\3+\6+\u0112\n+\r+\16+\u0113"+
		"\3,\3,\7,\u0118\n,\f,\16,\u011b\13,\3,\3,\3-\3-\3-\3-\3-\3-\3-\7-\u0126"+
		"\n-\f-\16-\u0129\13-\3-\3-\3.\6.\u012e\n.\r.\16.\u012f\3.\3.\3/\3/\3/"+
		"\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/"+
		"\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/"+
		"\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/"+
		"\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/"+
		"\3/\3/\5/\u0195\n/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\5"+
		"\60\u01a1\n\60\2\2\61\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27"+
		"\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33"+
		"\65\34\67\359\36;\37= ?!A\"C\2E\2G\2I\2K\2M\2O\2Q#S$U%W&Y\'[(])_*\3\2"+
		"\n\4\2C\\c|\3\2\62;\3\2//\3\2$$\16\2*+CCEEGGIIKKNNPPTTVWYYaa\r\2*+CEG"+
		"GIIKKNNPPRRTWYYaa\6\2,-//\61\61??\6\2*+..=>@@\u01bd\2\3\3\2\2\2\2\5\3"+
		"\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2"+
		"\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3"+
		"\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'"+
		"\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63"+
		"\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2"+
		"?\3\2\2\2\2A\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3"+
		"\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\3a\3\2\2\2\5i\3\2\2\2\7o\3\2\2"+
		"\2\ts\3\2\2\2\13z\3\2\2\2\r}\3\2\2\2\17\u0083\3\2\2\2\21\u0087\3\2\2\2"+
		"\23\u008c\3\2\2\2\25\u008e\3\2\2\2\27\u0097\3\2\2\2\31\u0099\3\2\2\2\33"+
		"\u009b\3\2\2\2\35\u00a0\3\2\2\2\37\u00a6\3\2\2\2!\u00ad\3\2\2\2#\u00af"+
		"\3\2\2\2%\u00b1\3\2\2\2\'\u00b3\3\2\2\2)\u00b5\3\2\2\2+\u00b8\3\2\2\2"+
		"-\u00be\3\2\2\2/\u00c4\3\2\2\2\61\u00c9\3\2\2\2\63\u00cf\3\2\2\2\65\u00d1"+
		"\3\2\2\2\67\u00d3\3\2\2\29\u00d5\3\2\2\2;\u00d8\3\2\2\2=\u00db\3\2\2\2"+
		"?\u00de\3\2\2\2A\u00e1\3\2\2\2C\u00e7\3\2\2\2E\u00e9\3\2\2\2G\u00eb\3"+
		"\2\2\2I\u00ed\3\2\2\2K\u00ef\3\2\2\2M\u00f1\3\2\2\2O\u00f3\3\2\2\2Q\u00f6"+
		"\3\2\2\2S\u0100\3\2\2\2U\u0108\3\2\2\2W\u0115\3\2\2\2Y\u011e\3\2\2\2["+
		"\u012d\3\2\2\2]\u0194\3\2\2\2_\u01a0\3\2\2\2ab\7R\2\2bc\7T\2\2cd\7Q\2"+
		"\2de\7I\2\2ef\7T\2\2fg\7C\2\2gh\7O\2\2h\4\3\2\2\2ij\7D\2\2jk\7G\2\2kl"+
		"\7I\2\2lm\7K\2\2mn\7P\2\2n\6\3\2\2\2op\7G\2\2pq\7P\2\2qr\7F\2\2r\b\3\2"+
		"\2\2st\7U\2\2tu\7V\2\2uv\7T\2\2vw\7K\2\2wx\7P\2\2xy\7I\2\2y\n\3\2\2\2"+
		"z{\7<\2\2{|\7?\2\2|\f\3\2\2\2}~\7H\2\2~\177\7N\2\2\177\u0080\7Q\2\2\u0080"+
		"\u0081\7C\2\2\u0081\u0082\7V\2\2\u0082\16\3\2\2\2\u0083\u0084\7K\2\2\u0084"+
		"\u0085\7P\2\2\u0085\u0086\7V\2\2\u0086\20\3\2\2\2\u0087\u0088\7X\2\2\u0088"+
		"\u0089\7Q\2\2\u0089\u008a\7K\2\2\u008a\u008b\7F\2\2\u008b\22\3\2\2\2\u008c"+
		"\u008d\7.\2\2\u008d\24\3\2\2\2\u008e\u008f\7H\2\2\u008f\u0090\7W\2\2\u0090"+
		"\u0091\7P\2\2\u0091\u0092\7E\2\2\u0092\u0093\7V\2\2\u0093\u0094\7K\2\2"+
		"\u0094\u0095\7Q\2\2\u0095\u0096\7P\2\2\u0096\26\3\2\2\2\u0097\u0098\7"+
		"*\2\2\u0098\30\3\2\2\2\u0099\u009a\7+\2\2\u009a\32\3\2\2\2\u009b\u009c"+
		"\7T\2\2\u009c\u009d\7G\2\2\u009d\u009e\7C\2\2\u009e\u009f\7F\2\2\u009f"+
		"\34\3\2\2\2\u00a0\u00a1\7Y\2\2\u00a1\u00a2\7T\2\2\u00a2\u00a3\7K\2\2\u00a3"+
		"\u00a4\7V\2\2\u00a4\u00a5\7G\2\2\u00a5\36\3\2\2\2\u00a6\u00a7\7T\2\2\u00a7"+
		"\u00a8\7G\2\2\u00a8\u00a9\7V\2\2\u00a9\u00aa\7W\2\2\u00aa\u00ab\7T\2\2"+
		"\u00ab\u00ac\7P\2\2\u00ac \3\2\2\2\u00ad\u00ae\7-\2\2\u00ae\"\3\2\2\2"+
		"\u00af\u00b0\7/\2\2\u00b0$\3\2\2\2\u00b1\u00b2\7,\2\2\u00b2&\3\2\2\2\u00b3"+
		"\u00b4\7\61\2\2\u00b4(\3\2\2\2\u00b5\u00b6\7K\2\2\u00b6\u00b7\7H\2\2\u00b7"+
		"*\3\2\2\2\u00b8\u00b9\7G\2\2\u00b9\u00ba\7P\2\2\u00ba\u00bb\7F\2\2\u00bb"+
		"\u00bc\7K\2\2\u00bc\u00bd\7H\2\2\u00bd,\3\2\2\2\u00be\u00bf\7G\2\2\u00bf"+
		"\u00c0\7N\2\2\u00c0\u00c1\7U\2\2\u00c1\u00c2\7K\2\2\u00c2\u00c3\7H\2\2"+
		"\u00c3.\3\2\2\2\u00c4\u00c5\7V\2\2\u00c5\u00c6\7T\2\2\u00c6\u00c7\7W\2"+
		"\2\u00c7\u00c8\7G\2\2\u00c8\60\3\2\2\2\u00c9\u00ca\7H\2\2\u00ca\u00cb"+
		"\7C\2\2\u00cb\u00cc\7N\2\2\u00cc\u00cd\7U\2\2\u00cd\u00ce\7G\2\2\u00ce"+
		"\62\3\2\2\2\u00cf\u00d0\7>\2\2\u00d0\64\3\2\2\2\u00d1\u00d2\7@\2\2\u00d2"+
		"\66\3\2\2\2\u00d3\u00d4\7?\2\2\u00d48\3\2\2\2\u00d5\u00d6\7#\2\2\u00d6"+
		"\u00d7\7?\2\2\u00d7:\3\2\2\2\u00d8\u00d9\7>\2\2\u00d9\u00da\7?\2\2\u00da"+
		"<\3\2\2\2\u00db\u00dc\7@\2\2\u00dc\u00dd\7?\2\2\u00dd>\3\2\2\2\u00de\u00df"+
		"\7F\2\2\u00df\u00e0\7Q\2\2\u00e0@\3\2\2\2\u00e1\u00e2\7Y\2\2\u00e2\u00e3"+
		"\7J\2\2\u00e3\u00e4\7K\2\2\u00e4\u00e5\7N\2\2\u00e5\u00e6\7G\2\2\u00e6"+
		"B\3\2\2\2\u00e7\u00e8\t\2\2\2\u00e8D\3\2\2\2\u00e9\u00ea\t\3\2\2\u00ea"+
		"F\3\2\2\2\u00eb\u00ec\7\f\2\2\u00ecH\3\2\2\2\u00ed\u00ee\7\17\2\2\u00ee"+
		"J\3\2\2\2\u00ef\u00f0\7\13\2\2\u00f0L\3\2\2\2\u00f1\u00f2\7\"\2\2\u00f2"+
		"N\3\2\2\2\u00f3\u00f4\7/\2\2\u00f4\u00f5\7/\2\2\u00f5P\3\2\2\2\u00f6\u00fd"+
		"\5C\"\2\u00f7\u00fa\5C\"\2\u00f8\u00fa\5E#\2\u00f9\u00f7\3\2\2\2\u00f9"+
		"\u00f8\3\2\2\2\u00fa\u00fb\3\2\2\2\u00fb\u00f9\3\2\2\2\u00fb\u00fc\3\2"+
		"\2\2\u00fc\u00fe\3\2\2\2\u00fd\u00f9\3\2\2\2\u00fd\u00fe\3\2\2\2\u00fe"+
		"R\3\2\2\2\u00ff\u0101\t\4\2\2\u0100\u00ff\3\2\2\2\u0100\u0101\3\2\2\2"+
		"\u0101\u0103\3\2\2\2\u0102\u0104\5E#\2\u0103\u0102\3\2\2\2\u0104\u0105"+
		"\3\2\2\2\u0105\u0103\3\2\2\2\u0105\u0106\3\2\2\2\u0106T\3\2\2\2\u0107"+
		"\u0109\t\4\2\2\u0108\u0107\3\2\2\2\u0108\u0109\3\2\2\2\u0109\u010b\3\2"+
		"\2\2\u010a\u010c\5E#\2\u010b\u010a\3\2\2\2\u010c\u010d\3\2\2\2\u010d\u010b"+
		"\3\2\2\2\u010d\u010e\3\2\2\2\u010e\u010f\3\2\2\2\u010f\u0111\7\60\2\2"+
		"\u0110\u0112\5E#\2\u0111\u0110\3\2\2\2\u0112\u0113\3\2\2\2\u0113\u0111"+
		"\3\2\2\2\u0113\u0114\3\2\2\2\u0114V\3\2\2\2\u0115\u0119\7$\2\2\u0116\u0118"+
		"\n\5\2\2\u0117\u0116\3\2\2\2\u0118\u011b\3\2\2\2\u0119\u0117\3\2\2\2\u0119"+
		"\u011a\3\2\2\2\u011a\u011c\3\2\2\2\u011b\u0119\3\2\2\2\u011c\u011d\7$"+
		"\2\2\u011dX\3\2\2\2\u011e\u011f\7\61\2\2\u011f\u0120\7\61\2\2\u0120\u0121"+
		"\3\2\2\2\u0121\u0122\7/\2\2\u0122\u0123\7/\2\2\u0123\u0127\3\2\2\2\u0124"+
		"\u0126\n\6\2\2\u0125\u0124\3\2\2\2\u0126\u0129\3\2\2\2\u0127\u0125\3\2"+
		"\2\2\u0127\u0128\3\2\2\2\u0128\u012a\3\2\2\2\u0129\u0127\3\2\2\2\u012a"+
		"\u012b\b-\2\2\u012bZ\3\2\2\2\u012c\u012e\t\7\2\2\u012d\u012c\3\2\2\2\u012e"+
		"\u012f\3\2\2\2\u012f\u012d\3\2\2\2\u012f\u0130\3\2\2\2\u0130\u0131\3\2"+
		"\2\2\u0131\u0132\b.\2\2\u0132\\\3\2\2\2\u0133\u0134\7R\2\2\u0134\u0135"+
		"\7T\2\2\u0135\u0136\7Q\2\2\u0136\u0137\7I\2\2\u0137\u0138\7T\2\2\u0138"+
		"\u0139\7C\2\2\u0139\u0195\7O\2\2\u013a\u013b\7D\2\2\u013b\u013c\7G\2\2"+
		"\u013c\u013d\7I\2\2\u013d\u013e\7K\2\2\u013e\u0195\7P\2\2\u013f\u0140"+
		"\7G\2\2\u0140\u0141\7P\2\2\u0141\u0195\7F\2\2\u0142\u0143\7H\2\2\u0143"+
		"\u0144\7W\2\2\u0144\u0145\7P\2\2\u0145\u0146\7E\2\2\u0146\u0147\7V\2\2"+
		"\u0147\u0148\7K\2\2\u0148\u0149\7Q\2\2\u0149\u0195\7P\2\2\u014a\u014b"+
		"\7T\2\2\u014b\u014c\7G\2\2\u014c\u014d\7C\2\2\u014d\u0195\7F\2\2\u014e"+
		"\u014f\7Y\2\2\u014f\u0150\7T\2\2\u0150\u0151\7K\2\2\u0151\u0152\7V\2\2"+
		"\u0152\u0195\7G\2\2\u0153\u0154\7K\2\2\u0154\u0195\7H\2\2\u0155\u0156"+
		"\7G\2\2\u0156\u0157\7N\2\2\u0157\u0158\7U\2\2\u0158\u0159\7K\2\2\u0159"+
		"\u0195\7H\2\2\u015a\u015b\7G\2\2\u015b\u015c\7P\2\2\u015c\u015d\7F\2\2"+
		"\u015d\u015e\7K\2\2\u015e\u0195\7H\2\2\u015f\u0160\7F\2\2\u0160\u0195"+
		"\7Q\2\2\u0161\u0162\7Y\2\2\u0162\u0163\7J\2\2\u0163\u0164\7K\2\2\u0164"+
		"\u0165\7N\2\2\u0165\u0195\7G\2\2\u0166\u0167\7E\2\2\u0167\u0168\7Q\2\2"+
		"\u0168\u0169\7P\2\2\u0169\u016a\7V\2\2\u016a\u016b\7K\2\2\u016b\u016c"+
		"\7P\2\2\u016c\u016d\7W\2\2\u016d\u0195\7G\2\2\u016e\u016f\7D\2\2\u016f"+
		"\u0170\7T\2\2\u0170\u0171\7G\2\2\u0171\u0172\7C\2\2\u0172\u0195\7M\2\2"+
		"\u0173\u0174\7T\2\2\u0174\u0175\7G\2\2\u0175\u0176\7V\2\2\u0176\u0177"+
		"\7W\2\2\u0177\u0178\7T\2\2\u0178\u0195\7P\2\2\u0179\u017a\7K\2\2\u017a"+
		"\u017b\7P\2\2\u017b\u0195\7V\2\2\u017c\u017d\7X\2\2\u017d\u017e\7Q\2\2"+
		"\u017e\u017f\7K\2\2\u017f\u0195\7F\2\2\u0180\u0181\7U\2\2\u0181\u0182"+
		"\7V\2\2\u0182\u0183\7T\2\2\u0183\u0184\7K\2\2\u0184\u0185\7P\2\2\u0185"+
		"\u0195\7I\2\2\u0186\u0187\7H\2\2\u0187\u0188\7N\2\2\u0188\u0189\7Q\2\2"+
		"\u0189\u018a\7C\2\2\u018a\u0195\7V\2\2\u018b\u018c\7V\2\2\u018c\u018d"+
		"\7T\2\2\u018d\u018e\7W\2\2\u018e\u0195\7G\2\2\u018f\u0190\7H\2\2\u0190"+
		"\u0191\7C\2\2\u0191\u0192\7N\2\2\u0192\u0193\7U\2\2\u0193\u0195\7G\2\2"+
		"\u0194\u0133\3\2\2\2\u0194\u013a\3\2\2\2\u0194\u013f\3\2\2\2\u0194\u0142"+
		"\3\2\2\2\u0194\u014a\3\2\2\2\u0194\u014e\3\2\2\2\u0194\u0153\3\2\2\2\u0194"+
		"\u0155\3\2\2\2\u0194\u015a\3\2\2\2\u0194\u015f\3\2\2\2\u0194\u0161\3\2"+
		"\2\2\u0194\u0166\3\2\2\2\u0194\u016e\3\2\2\2\u0194\u0173\3\2\2\2\u0194"+
		"\u0179\3\2\2\2\u0194\u017c\3\2\2\2\u0194\u0180\3\2\2\2\u0194\u0186\3\2"+
		"\2\2\u0194\u018b\3\2\2\2\u0194\u018f\3\2\2\2\u0195^\3\2\2\2\u0196\u0197"+
		"\7<\2\2\u0197\u01a1\7?\2\2\u0198\u01a1\t\b\2\2\u0199\u019a\7#\2\2\u019a"+
		"\u01a1\7?\2\2\u019b\u01a1\t\t\2\2\u019c\u019d\7>\2\2\u019d\u01a1\7?\2"+
		"\2\u019e\u019f\7@\2\2\u019f\u01a1\7?\2\2\u01a0\u0196\3\2\2\2\u01a0\u0198"+
		"\3\2\2\2\u01a0\u0199\3\2\2\2\u01a0\u019b\3\2\2\2\u01a0\u019c\3\2\2\2\u01a0"+
		"\u019e\3\2\2\2\u01a1`\3\2\2\2\20\2\u00f9\u00fb\u00fd\u0100\u0105\u0108"+
		"\u010d\u0113\u0119\u0127\u012f\u0194\u01a0\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}